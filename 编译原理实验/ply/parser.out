Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME = expression
Rule 2     statement -> NAME = string
Rule 3     statement -> NAME = statement
Rule 4     statement -> expression
Rule 5     statement -> string
Rule 6     expression -> expression + expression
Rule 7     expression -> expression - expression
Rule 8     expression -> expression * expression
Rule 9     expression -> expression / expression
Rule 10    expression -> - expression
Rule 11    expression -> ( expression )
Rule 12    expression -> NUMBER
Rule 13    expression -> BINARY
Rule 14    expression -> OCT
Rule 15    expression -> HEX
Rule 16    string -> string + expression
Rule 17    string -> string + string
Rule 18    string -> expression + string
Rule 19    string -> expression * string
Rule 20    string -> string * expression
Rule 21    string -> ( string )
Rule 22    string -> string - expression
Rule 23    string -> string - string
Rule 24    string -> expression - string
Rule 25    string -> string / string
Rule 26    string -> expression / string
Rule 27    string -> string / expression
Rule 28    string -> string * string
Rule 29    string -> STRING
Rule 30    string -> NAME
Rule 31    expression -> NAME

Terminals, with rules where they appear

(                    : 11 21
)                    : 11 21
*                    : 8 19 20 28
+                    : 6 16 17 18
-                    : 7 10 22 23 24
/                    : 9 25 26 27
=                    : 1 2 3
BINARY               : 13
HEX                  : 15
NAME                 : 1 2 3 30 31
NUMBER               : 12
OCT                  : 14
STRING               : 29
error                : 

Nonterminals, with rules where they appear

expression           : 1 4 6 6 7 7 8 8 9 9 10 11 16 18 19 20 22 24 26 27
statement            : 3 0
string               : 2 5 16 17 17 18 19 20 21 22 23 23 24 25 25 26 27 28 28

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME = expression
    (2) statement -> . NAME = string
    (3) statement -> . NAME = statement
    (4) statement -> . expression
    (5) statement -> . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    NAME            shift and go to state 2
    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    STRING          shift and go to state 11

    statement                      shift and go to state 1
    expression                     shift and go to state 3
    string                         shift and go to state 4

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . = expression
    (2) statement -> NAME . = string
    (3) statement -> NAME . = statement
    (31) expression -> NAME .
    (30) string -> NAME .

  ! reduce/reduce conflict for + resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for * resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for - resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for / resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 30 (string -> NAME .)
    =               shift and go to state 12
    +               reduce using rule 30 (string -> NAME .)
    *               reduce using rule 30 (string -> NAME .)
    -               reduce using rule 30 (string -> NAME .)
    /               reduce using rule 30 (string -> NAME .)
    $end            reduce using rule 30 (string -> NAME .)

  ! +               [ reduce using rule 31 (expression -> NAME .) ]
  ! -               [ reduce using rule 31 (expression -> NAME .) ]
  ! *               [ reduce using rule 31 (expression -> NAME .) ]
  ! /               [ reduce using rule 31 (expression -> NAME .) ]
  ! $end            [ reduce using rule 31 (expression -> NAME .) ]


state 3

    (4) statement -> expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    $end            reduce using rule 4 (statement -> expression .)
    +               shift and go to state 13
    -               shift and go to state 14
    *               shift and go to state 15
    /               shift and go to state 16


state 4

    (5) statement -> string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    $end            reduce using rule 5 (statement -> string .)
    +               shift and go to state 17
    *               shift and go to state 18
    -               shift and go to state 19
    /               shift and go to state 20


state 5

    (10) expression -> - . expression
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    -               shift and go to state 5
    (               shift and go to state 22
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 23

    expression                     shift and go to state 21

state 6

    (11) expression -> ( . expression )
    (21) string -> ( . string )
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    expression                     shift and go to state 24
    string                         shift and go to state 25

state 7

    (12) expression -> NUMBER .

    +               reduce using rule 12 (expression -> NUMBER .)
    -               reduce using rule 12 (expression -> NUMBER .)
    *               reduce using rule 12 (expression -> NUMBER .)
    /               reduce using rule 12 (expression -> NUMBER .)
    $end            reduce using rule 12 (expression -> NUMBER .)
    )               reduce using rule 12 (expression -> NUMBER .)


state 8

    (13) expression -> BINARY .

    +               reduce using rule 13 (expression -> BINARY .)
    -               reduce using rule 13 (expression -> BINARY .)
    *               reduce using rule 13 (expression -> BINARY .)
    /               reduce using rule 13 (expression -> BINARY .)
    $end            reduce using rule 13 (expression -> BINARY .)
    )               reduce using rule 13 (expression -> BINARY .)


state 9

    (14) expression -> OCT .

    +               reduce using rule 14 (expression -> OCT .)
    -               reduce using rule 14 (expression -> OCT .)
    *               reduce using rule 14 (expression -> OCT .)
    /               reduce using rule 14 (expression -> OCT .)
    $end            reduce using rule 14 (expression -> OCT .)
    )               reduce using rule 14 (expression -> OCT .)


state 10

    (15) expression -> HEX .

    +               reduce using rule 15 (expression -> HEX .)
    -               reduce using rule 15 (expression -> HEX .)
    *               reduce using rule 15 (expression -> HEX .)
    /               reduce using rule 15 (expression -> HEX .)
    $end            reduce using rule 15 (expression -> HEX .)
    )               reduce using rule 15 (expression -> HEX .)


state 11

    (29) string -> STRING .

    +               reduce using rule 29 (string -> STRING .)
    *               reduce using rule 29 (string -> STRING .)
    -               reduce using rule 29 (string -> STRING .)
    /               reduce using rule 29 (string -> STRING .)
    $end            reduce using rule 29 (string -> STRING .)
    )               reduce using rule 29 (string -> STRING .)


state 12

    (1) statement -> NAME = . expression
    (2) statement -> NAME = . string
    (3) statement -> NAME = . statement
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (1) statement -> . NAME = expression
    (2) statement -> . NAME = string
    (3) statement -> . NAME = statement
    (4) statement -> . expression
    (5) statement -> . string

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 27
    STRING          shift and go to state 11

    expression                     shift and go to state 28
    string                         shift and go to state 29
    statement                      shift and go to state 30

state 13

    (6) expression -> expression + . expression
    (18) string -> expression + . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    expression                     shift and go to state 31
    string                         shift and go to state 32

state 14

    (7) expression -> expression - . expression
    (24) string -> expression - . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    expression                     shift and go to state 33
    string                         shift and go to state 34

state 15

    (8) expression -> expression * . expression
    (19) string -> expression * . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    expression                     shift and go to state 35
    string                         shift and go to state 36

state 16

    (9) expression -> expression / . expression
    (26) string -> expression / . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    expression                     shift and go to state 37
    string                         shift and go to state 38

state 17

    (16) string -> string + . expression
    (17) string -> string + . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    string                         shift and go to state 39
    expression                     shift and go to state 40

state 18

    (20) string -> string * . expression
    (28) string -> string * . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    string                         shift and go to state 41
    expression                     shift and go to state 42

state 19

    (22) string -> string - . expression
    (23) string -> string - . string
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME

    -               shift and go to state 5
    (               shift and go to state 6
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 26
    STRING          shift and go to state 11

    string                         shift and go to state 43
    expression                     shift and go to state 44

state 20

    (25) string -> string / . string
    (27) string -> string / . expression
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    (               shift and go to state 47
    STRING          shift and go to state 11
    NAME            shift and go to state 48
    -               shift and go to state 5
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10

    string                         shift and go to state 45
    expression                     shift and go to state 46

state 21

    (10) expression -> - expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 10 (expression -> - expression .)
    -               reduce using rule 10 (expression -> - expression .)
    *               reduce using rule 10 (expression -> - expression .)
    /               reduce using rule 10 (expression -> - expression .)
    $end            reduce using rule 10 (expression -> - expression .)
    )               reduce using rule 10 (expression -> - expression .)

  ! +               [ shift and go to state 50 ]
  ! -               [ shift and go to state 49 ]
  ! *               [ shift and go to state 51 ]
  ! /               [ shift and go to state 52 ]


state 22

    (11) expression -> ( . expression )
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    -               shift and go to state 5
    (               shift and go to state 22
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 23

    expression                     shift and go to state 53

state 23

    (31) expression -> NAME .

    +               reduce using rule 31 (expression -> NAME .)
    -               reduce using rule 31 (expression -> NAME .)
    *               reduce using rule 31 (expression -> NAME .)
    /               reduce using rule 31 (expression -> NAME .)
    $end            reduce using rule 31 (expression -> NAME .)
    )               reduce using rule 31 (expression -> NAME .)


state 24

    (11) expression -> ( expression . )
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    )               shift and go to state 54
    +               shift and go to state 13
    -               shift and go to state 14
    *               shift and go to state 15
    /               shift and go to state 16


state 25

    (21) string -> ( string . )
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    )               shift and go to state 55
    +               shift and go to state 17
    *               shift and go to state 18
    -               shift and go to state 19
    /               shift and go to state 20


state 26

    (31) expression -> NAME .
    (30) string -> NAME .

  ! reduce/reduce conflict for ) resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for + resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for * resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for - resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for / resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 30 (string -> NAME .)
    )               reduce using rule 30 (string -> NAME .)
    +               reduce using rule 30 (string -> NAME .)
    *               reduce using rule 30 (string -> NAME .)
    -               reduce using rule 30 (string -> NAME .)
    /               reduce using rule 30 (string -> NAME .)
    $end            reduce using rule 30 (string -> NAME .)

  ! )               [ reduce using rule 31 (expression -> NAME .) ]
  ! +               [ reduce using rule 31 (expression -> NAME .) ]
  ! -               [ reduce using rule 31 (expression -> NAME .) ]
  ! *               [ reduce using rule 31 (expression -> NAME .) ]
  ! /               [ reduce using rule 31 (expression -> NAME .) ]
  ! $end            [ reduce using rule 31 (expression -> NAME .) ]


state 27

    (31) expression -> NAME .
    (30) string -> NAME .
    (1) statement -> NAME . = expression
    (2) statement -> NAME . = string
    (3) statement -> NAME . = statement

  ! reduce/reduce conflict for + resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for * resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for - resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for / resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 30 (string -> NAME .)
    +               reduce using rule 30 (string -> NAME .)
    *               reduce using rule 30 (string -> NAME .)
    -               reduce using rule 30 (string -> NAME .)
    /               reduce using rule 30 (string -> NAME .)
    $end            reduce using rule 30 (string -> NAME .)
    =               shift and go to state 12

  ! +               [ reduce using rule 31 (expression -> NAME .) ]
  ! -               [ reduce using rule 31 (expression -> NAME .) ]
  ! *               [ reduce using rule 31 (expression -> NAME .) ]
  ! /               [ reduce using rule 31 (expression -> NAME .) ]
  ! $end            [ reduce using rule 31 (expression -> NAME .) ]


state 28

    (1) statement -> NAME = expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (4) statement -> expression .

  ! reduce/reduce conflict for $end resolved using rule 1 (statement -> NAME = expression .)
    $end            reduce using rule 1 (statement -> NAME = expression .)
    +               shift and go to state 13
    -               shift and go to state 14
    *               shift and go to state 15
    /               shift and go to state 16

  ! $end            [ reduce using rule 4 (statement -> expression .) ]


state 29

    (2) statement -> NAME = string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string
    (5) statement -> string .

  ! reduce/reduce conflict for $end resolved using rule 2 (statement -> NAME = string .)
    $end            reduce using rule 2 (statement -> NAME = string .)
    +               shift and go to state 17
    *               shift and go to state 18
    -               shift and go to state 19
    /               shift and go to state 20

  ! $end            [ reduce using rule 5 (statement -> string .) ]


state 30

    (3) statement -> NAME = statement .

    $end            reduce using rule 3 (statement -> NAME = statement .)


state 31

    (6) expression -> expression + expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 6 (expression -> expression + expression .)
    -               reduce using rule 6 (expression -> expression + expression .)
    $end            reduce using rule 6 (expression -> expression + expression .)
    )               reduce using rule 6 (expression -> expression + expression .)
    *               shift and go to state 15
    /               shift and go to state 16

  ! *               [ reduce using rule 6 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 6 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]


state 32

    (18) string -> expression + string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 18 (string -> expression + string .)
    -               reduce using rule 18 (string -> expression + string .)
    $end            reduce using rule 18 (string -> expression + string .)
    )               reduce using rule 18 (string -> expression + string .)
    *               shift and go to state 18
    /               shift and go to state 20

  ! *               [ reduce using rule 18 (string -> expression + string .) ]
  ! /               [ reduce using rule 18 (string -> expression + string .) ]
  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 19 ]


state 33

    (7) expression -> expression - expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 7 (expression -> expression - expression .)
    -               reduce using rule 7 (expression -> expression - expression .)
    $end            reduce using rule 7 (expression -> expression - expression .)
    )               reduce using rule 7 (expression -> expression - expression .)
    *               shift and go to state 15
    /               shift and go to state 16

  ! *               [ reduce using rule 7 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 7 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]


state 34

    (24) string -> expression - string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 24 (string -> expression - string .)
    -               reduce using rule 24 (string -> expression - string .)
    $end            reduce using rule 24 (string -> expression - string .)
    )               reduce using rule 24 (string -> expression - string .)
    *               shift and go to state 18
    /               shift and go to state 20

  ! *               [ reduce using rule 24 (string -> expression - string .) ]
  ! /               [ reduce using rule 24 (string -> expression - string .) ]
  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 19 ]


state 35

    (8) expression -> expression * expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 8 (expression -> expression * expression .)
    -               reduce using rule 8 (expression -> expression * expression .)
    *               reduce using rule 8 (expression -> expression * expression .)
    /               reduce using rule 8 (expression -> expression * expression .)
    $end            reduce using rule 8 (expression -> expression * expression .)
    )               reduce using rule 8 (expression -> expression * expression .)

  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]
  ! *               [ shift and go to state 15 ]
  ! /               [ shift and go to state 16 ]


state 36

    (19) string -> expression * string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 19 (string -> expression * string .)
    *               reduce using rule 19 (string -> expression * string .)
    -               reduce using rule 19 (string -> expression * string .)
    /               reduce using rule 19 (string -> expression * string .)
    $end            reduce using rule 19 (string -> expression * string .)
    )               reduce using rule 19 (string -> expression * string .)

  ! +               [ shift and go to state 17 ]
  ! *               [ shift and go to state 18 ]
  ! -               [ shift and go to state 19 ]
  ! /               [ shift and go to state 20 ]


state 37

    (9) expression -> expression / expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 9 (expression -> expression / expression .)
    -               reduce using rule 9 (expression -> expression / expression .)
    *               reduce using rule 9 (expression -> expression / expression .)
    /               reduce using rule 9 (expression -> expression / expression .)
    $end            reduce using rule 9 (expression -> expression / expression .)
    )               reduce using rule 9 (expression -> expression / expression .)

  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]
  ! *               [ shift and go to state 15 ]
  ! /               [ shift and go to state 16 ]


state 38

    (26) string -> expression / string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 26 (string -> expression / string .)
    *               reduce using rule 26 (string -> expression / string .)
    -               reduce using rule 26 (string -> expression / string .)
    /               reduce using rule 26 (string -> expression / string .)
    $end            reduce using rule 26 (string -> expression / string .)
    )               reduce using rule 26 (string -> expression / string .)

  ! +               [ shift and go to state 17 ]
  ! *               [ shift and go to state 18 ]
  ! -               [ shift and go to state 19 ]
  ! /               [ shift and go to state 20 ]


state 39

    (17) string -> string + string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 17 (string -> string + string .)
    -               reduce using rule 17 (string -> string + string .)
    $end            reduce using rule 17 (string -> string + string .)
    )               reduce using rule 17 (string -> string + string .)
    *               shift and go to state 18
    /               shift and go to state 20

  ! *               [ reduce using rule 17 (string -> string + string .) ]
  ! /               [ reduce using rule 17 (string -> string + string .) ]
  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 19 ]


state 40

    (16) string -> string + expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 16 (string -> string + expression .)
    -               reduce using rule 16 (string -> string + expression .)
    $end            reduce using rule 16 (string -> string + expression .)
    )               reduce using rule 16 (string -> string + expression .)
    *               shift and go to state 15
    /               shift and go to state 16

  ! *               [ reduce using rule 16 (string -> string + expression .) ]
  ! /               [ reduce using rule 16 (string -> string + expression .) ]
  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]


state 41

    (28) string -> string * string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 28 (string -> string * string .)
    *               reduce using rule 28 (string -> string * string .)
    -               reduce using rule 28 (string -> string * string .)
    /               reduce using rule 28 (string -> string * string .)
    $end            reduce using rule 28 (string -> string * string .)
    )               reduce using rule 28 (string -> string * string .)

  ! +               [ shift and go to state 17 ]
  ! *               [ shift and go to state 18 ]
  ! -               [ shift and go to state 19 ]
  ! /               [ shift and go to state 20 ]


state 42

    (20) string -> string * expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 20 (string -> string * expression .)
    *               reduce using rule 20 (string -> string * expression .)
    -               reduce using rule 20 (string -> string * expression .)
    /               reduce using rule 20 (string -> string * expression .)
    $end            reduce using rule 20 (string -> string * expression .)
    )               reduce using rule 20 (string -> string * expression .)

  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]
  ! *               [ shift and go to state 15 ]
  ! /               [ shift and go to state 16 ]


state 43

    (23) string -> string - string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 23 (string -> string - string .)
    -               reduce using rule 23 (string -> string - string .)
    $end            reduce using rule 23 (string -> string - string .)
    )               reduce using rule 23 (string -> string - string .)
    *               shift and go to state 18
    /               shift and go to state 20

  ! *               [ reduce using rule 23 (string -> string - string .) ]
  ! /               [ reduce using rule 23 (string -> string - string .) ]
  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 19 ]


state 44

    (22) string -> string - expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string

    +               reduce using rule 22 (string -> string - expression .)
    -               reduce using rule 22 (string -> string - expression .)
    $end            reduce using rule 22 (string -> string - expression .)
    )               reduce using rule 22 (string -> string - expression .)
    *               shift and go to state 15
    /               shift and go to state 16

  ! *               [ reduce using rule 22 (string -> string - expression .) ]
  ! /               [ reduce using rule 22 (string -> string - expression .) ]
  ! +               [ shift and go to state 13 ]
  ! -               [ shift and go to state 14 ]


state 45

    (25) string -> string / string .
    (16) string -> string . + expression
    (17) string -> string . + string
    (20) string -> string . * expression
    (22) string -> string . - expression
    (23) string -> string . - string
    (25) string -> string . / string
    (27) string -> string . / expression
    (28) string -> string . * string

    +               reduce using rule 25 (string -> string / string .)
    *               reduce using rule 25 (string -> string / string .)
    -               reduce using rule 25 (string -> string / string .)
    /               reduce using rule 25 (string -> string / string .)
    $end            reduce using rule 25 (string -> string / string .)
    )               reduce using rule 25 (string -> string / string .)

  ! +               [ shift and go to state 17 ]
  ! *               [ shift and go to state 18 ]
  ! -               [ shift and go to state 19 ]
  ! /               [ shift and go to state 20 ]


state 46

    (27) string -> string / expression .
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 27 (string -> string / expression .)
    *               reduce using rule 27 (string -> string / expression .)
    -               reduce using rule 27 (string -> string / expression .)
    /               reduce using rule 27 (string -> string / expression .)
    $end            reduce using rule 27 (string -> string / expression .)
    )               reduce using rule 27 (string -> string / expression .)

  ! +               [ shift and go to state 57 ]
  ! *               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! /               [ shift and go to state 56 ]


state 47

    (21) string -> ( . string )
    (11) expression -> ( . expression )
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    (               shift and go to state 47
    STRING          shift and go to state 11
    NAME            shift and go to state 48
    -               shift and go to state 5
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10

    string                         shift and go to state 25
    expression                     shift and go to state 60

state 48

    (30) string -> NAME .
    (31) expression -> NAME .

  ! reduce/reduce conflict for + resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for * resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for - resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for / resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 30 (string -> NAME .)
  ! reduce/reduce conflict for ) resolved using rule 30 (string -> NAME .)
    +               reduce using rule 30 (string -> NAME .)
    *               reduce using rule 30 (string -> NAME .)
    -               reduce using rule 30 (string -> NAME .)
    /               reduce using rule 30 (string -> NAME .)
    $end            reduce using rule 30 (string -> NAME .)
    )               reduce using rule 30 (string -> NAME .)

  ! +               [ reduce using rule 31 (expression -> NAME .) ]
  ! *               [ reduce using rule 31 (expression -> NAME .) ]
  ! -               [ reduce using rule 31 (expression -> NAME .) ]
  ! /               [ reduce using rule 31 (expression -> NAME .) ]
  ! $end            [ reduce using rule 31 (expression -> NAME .) ]
  ! )               [ reduce using rule 31 (expression -> NAME .) ]


state 49

    (7) expression -> expression - . expression
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    -               shift and go to state 5
    (               shift and go to state 22
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 23

    expression                     shift and go to state 61

state 50

    (6) expression -> expression + . expression
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    -               shift and go to state 5
    (               shift and go to state 22
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 23

    expression                     shift and go to state 62

state 51

    (8) expression -> expression * . expression
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    -               shift and go to state 5
    (               shift and go to state 22
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 23

    expression                     shift and go to state 63

state 52

    (9) expression -> expression / . expression
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    -               shift and go to state 5
    (               shift and go to state 22
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10
    NAME            shift and go to state 23

    expression                     shift and go to state 64

state 53

    (11) expression -> ( expression . )
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    )               shift and go to state 54
    +               shift and go to state 50
    -               shift and go to state 49
    *               shift and go to state 51
    /               shift and go to state 52


state 54

    (11) expression -> ( expression ) .

    +               reduce using rule 11 (expression -> ( expression ) .)
    -               reduce using rule 11 (expression -> ( expression ) .)
    *               reduce using rule 11 (expression -> ( expression ) .)
    /               reduce using rule 11 (expression -> ( expression ) .)
    $end            reduce using rule 11 (expression -> ( expression ) .)
    )               reduce using rule 11 (expression -> ( expression ) .)


state 55

    (21) string -> ( string ) .

    +               reduce using rule 21 (string -> ( string ) .)
    *               reduce using rule 21 (string -> ( string ) .)
    -               reduce using rule 21 (string -> ( string ) .)
    /               reduce using rule 21 (string -> ( string ) .)
    $end            reduce using rule 21 (string -> ( string ) .)
    )               reduce using rule 21 (string -> ( string ) .)


state 56

    (26) string -> expression / . string
    (9) expression -> expression / . expression
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    (               shift and go to state 47
    STRING          shift and go to state 11
    NAME            shift and go to state 48
    -               shift and go to state 5
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10

    expression                     shift and go to state 65
    string                         shift and go to state 38

state 57

    (18) string -> expression + . string
    (6) expression -> expression + . expression
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    (               shift and go to state 47
    STRING          shift and go to state 11
    NAME            shift and go to state 48
    -               shift and go to state 5
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10

    expression                     shift and go to state 66
    string                         shift and go to state 32

state 58

    (19) string -> expression * . string
    (8) expression -> expression * . expression
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    (               shift and go to state 47
    STRING          shift and go to state 11
    NAME            shift and go to state 48
    -               shift and go to state 5
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10

    expression                     shift and go to state 67
    string                         shift and go to state 36

state 59

    (24) string -> expression - . string
    (7) expression -> expression - . expression
    (16) string -> . string + expression
    (17) string -> . string + string
    (18) string -> . expression + string
    (19) string -> . expression * string
    (20) string -> . string * expression
    (21) string -> . ( string )
    (22) string -> . string - expression
    (23) string -> . string - string
    (24) string -> . expression - string
    (25) string -> . string / string
    (26) string -> . expression / string
    (27) string -> . string / expression
    (28) string -> . string * string
    (29) string -> . STRING
    (30) string -> . NAME
    (6) expression -> . expression + expression
    (7) expression -> . expression - expression
    (8) expression -> . expression * expression
    (9) expression -> . expression / expression
    (10) expression -> . - expression
    (11) expression -> . ( expression )
    (12) expression -> . NUMBER
    (13) expression -> . BINARY
    (14) expression -> . OCT
    (15) expression -> . HEX
    (31) expression -> . NAME

    (               shift and go to state 47
    STRING          shift and go to state 11
    NAME            shift and go to state 48
    -               shift and go to state 5
    NUMBER          shift and go to state 7
    BINARY          shift and go to state 8
    OCT             shift and go to state 9
    HEX             shift and go to state 10

    expression                     shift and go to state 68
    string                         shift and go to state 34

state 60

    (11) expression -> ( expression . )
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    )               shift and go to state 54
    +               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    /               shift and go to state 56


state 61

    (7) expression -> expression - expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 7 (expression -> expression - expression .)
    -               reduce using rule 7 (expression -> expression - expression .)
    $end            reduce using rule 7 (expression -> expression - expression .)
    )               reduce using rule 7 (expression -> expression - expression .)
    *               shift and go to state 51
    /               shift and go to state 52

  ! *               [ reduce using rule 7 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 7 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 50 ]
  ! -               [ shift and go to state 49 ]


state 62

    (6) expression -> expression + expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 6 (expression -> expression + expression .)
    -               reduce using rule 6 (expression -> expression + expression .)
    $end            reduce using rule 6 (expression -> expression + expression .)
    )               reduce using rule 6 (expression -> expression + expression .)
    *               shift and go to state 51
    /               shift and go to state 52

  ! *               [ reduce using rule 6 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 6 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 50 ]
  ! -               [ shift and go to state 49 ]


state 63

    (8) expression -> expression * expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 8 (expression -> expression * expression .)
    -               reduce using rule 8 (expression -> expression * expression .)
    *               reduce using rule 8 (expression -> expression * expression .)
    /               reduce using rule 8 (expression -> expression * expression .)
    $end            reduce using rule 8 (expression -> expression * expression .)
    )               reduce using rule 8 (expression -> expression * expression .)

  ! +               [ shift and go to state 50 ]
  ! -               [ shift and go to state 49 ]
  ! *               [ shift and go to state 51 ]
  ! /               [ shift and go to state 52 ]


state 64

    (9) expression -> expression / expression .
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 9 (expression -> expression / expression .)
    -               reduce using rule 9 (expression -> expression / expression .)
    *               reduce using rule 9 (expression -> expression / expression .)
    /               reduce using rule 9 (expression -> expression / expression .)
    $end            reduce using rule 9 (expression -> expression / expression .)
    )               reduce using rule 9 (expression -> expression / expression .)

  ! +               [ shift and go to state 50 ]
  ! -               [ shift and go to state 49 ]
  ! *               [ shift and go to state 51 ]
  ! /               [ shift and go to state 52 ]


state 65

    (9) expression -> expression / expression .
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 9 (expression -> expression / expression .)
    *               reduce using rule 9 (expression -> expression / expression .)
    -               reduce using rule 9 (expression -> expression / expression .)
    /               reduce using rule 9 (expression -> expression / expression .)
    $end            reduce using rule 9 (expression -> expression / expression .)
    )               reduce using rule 9 (expression -> expression / expression .)

  ! +               [ shift and go to state 57 ]
  ! *               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! /               [ shift and go to state 56 ]


state 66

    (6) expression -> expression + expression .
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 6 (expression -> expression + expression .)
    -               reduce using rule 6 (expression -> expression + expression .)
    $end            reduce using rule 6 (expression -> expression + expression .)
    )               reduce using rule 6 (expression -> expression + expression .)
    *               shift and go to state 58
    /               shift and go to state 56

  ! *               [ reduce using rule 6 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 6 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 59 ]


state 67

    (8) expression -> expression * expression .
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 8 (expression -> expression * expression .)
    *               reduce using rule 8 (expression -> expression * expression .)
    -               reduce using rule 8 (expression -> expression * expression .)
    /               reduce using rule 8 (expression -> expression * expression .)
    $end            reduce using rule 8 (expression -> expression * expression .)
    )               reduce using rule 8 (expression -> expression * expression .)

  ! +               [ shift and go to state 57 ]
  ! *               [ shift and go to state 58 ]
  ! -               [ shift and go to state 59 ]
  ! /               [ shift and go to state 56 ]


state 68

    (7) expression -> expression - expression .
    (18) string -> expression . + string
    (19) string -> expression . * string
    (24) string -> expression . - string
    (26) string -> expression . / string
    (6) expression -> expression . + expression
    (7) expression -> expression . - expression
    (8) expression -> expression . * expression
    (9) expression -> expression . / expression

    +               reduce using rule 7 (expression -> expression - expression .)
    -               reduce using rule 7 (expression -> expression - expression .)
    $end            reduce using rule 7 (expression -> expression - expression .)
    )               reduce using rule 7 (expression -> expression - expression .)
    *               shift and go to state 58
    /               shift and go to state 56

  ! *               [ reduce using rule 7 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 7 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 57 ]
  ! -               [ shift and go to state 59 ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 2 resolved using rule (string -> NAME)
WARNING: rejected rule (expression -> NAME) in state 2
WARNING: reduce/reduce conflict in state 26 resolved using rule (string -> NAME)
WARNING: rejected rule (expression -> NAME) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (string -> NAME)
WARNING: rejected rule (expression -> NAME) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (statement -> NAME = expression)
WARNING: rejected rule (statement -> expression) in state 28
WARNING: reduce/reduce conflict in state 29 resolved using rule (statement -> NAME = string)
WARNING: rejected rule (statement -> string) in state 29
WARNING: reduce/reduce conflict in state 48 resolved using rule (string -> NAME)
WARNING: rejected rule (expression -> NAME) in state 48
