
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSBINARY HEX NAME NUMBER OCT STRINGstatement : NAME "=" expressionstatement : NAME "=" stringstatement : NAME "=" statementstatement : expression\n                 | stringexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : NUMBER\n                  | BINARY\n                  | OCT\n                  | HEXstring : string \'+\' expression\n              | string \'+\' string\n              | expression \'+\' stringstring : expression \'*\' string\n              | string \'*\' expressionstring : \'(\' string \')\'string : string \'-\' expression\n              | string \'-\' string\n              | expression \'-\' string\n              | string \'/\' string\n              | expression \'/\' string\n              | string \'/\' expression\n              | string \'*\' stringstring : STRINGstring : NAMEexpression : NAME'
    
_lr_action_items = {'NAME':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[2,23,26,27,26,26,26,26,26,26,26,48,23,48,23,23,23,23,48,48,48,48,]),'-':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,],[5,-30,14,19,5,5,-12,-13,-14,-15,-29,5,5,5,5,5,5,5,5,5,-10,5,-31,14,19,-30,-30,14,19,-6,-18,-7,-24,-8,-19,-9,-26,-17,-16,-28,-20,-23,-22,-25,-27,5,-30,5,5,5,5,49,-11,-21,5,5,5,5,59,-7,-6,-8,-9,-9,-6,-8,-7,]),'(':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[6,22,6,6,6,6,6,6,6,6,6,47,22,47,22,22,22,22,47,47,47,47,]),'NUMBER':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'BINARY':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'OCT':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'HEX':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'STRING':([0,6,12,13,14,15,16,17,18,19,20,47,56,57,58,59,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'$end':([1,2,3,4,7,8,9,10,11,21,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,54,55,61,62,63,64,65,66,67,68,],[0,-30,-4,-5,-12,-13,-14,-15,-29,-10,-31,-30,-30,-1,-2,-3,-6,-18,-7,-24,-8,-19,-9,-26,-17,-16,-28,-20,-23,-22,-25,-27,-30,-11,-21,-7,-6,-8,-9,-9,-6,-8,-7,]),'=':([2,27,],[12,12,]),'+':([2,3,4,7,8,9,10,11,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,53,54,55,60,61,62,63,64,65,66,67,68,],[-30,13,17,-12,-13,-14,-15,-29,-10,-31,13,17,-30,-30,13,17,-6,-18,-7,-24,-8,-19,-9,-26,-17,-16,-28,-20,-23,-22,-25,-27,-30,50,-11,-21,57,-7,-6,-8,-9,-9,-6,-8,-7,]),'*':([2,3,4,7,8,9,10,11,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,53,54,55,60,61,62,63,64,65,66,67,68,],[-30,15,18,-12,-13,-14,-15,-29,-10,-31,15,18,-30,-30,15,18,15,18,15,18,-8,-19,-9,-26,18,15,-28,-20,18,15,-25,-27,-30,51,-11,-21,58,51,51,-8,-9,-9,58,-8,58,]),'/':([2,3,4,7,8,9,10,11,21,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,53,54,55,60,61,62,63,64,65,66,67,68,],[-30,16,20,-12,-13,-14,-15,-29,-10,-31,16,20,-30,-30,16,20,16,20,16,20,-8,-19,-9,-26,20,16,-28,-20,20,16,-25,-27,-30,52,-11,-21,56,52,52,-8,-9,-9,56,-8,56,]),')':([7,8,9,10,11,21,23,24,25,26,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,53,54,55,60,61,62,63,64,65,66,67,68,],[-12,-13,-14,-15,-29,-10,-31,54,55,-30,-6,-18,-7,-24,-8,-19,-9,-26,-17,-16,-28,-20,-23,-22,-25,-27,-30,54,-11,-21,54,-7,-6,-8,-9,-9,-6,-8,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,12,],[1,30,]),'expression':([0,5,6,12,13,14,15,16,17,18,19,20,22,47,49,50,51,52,56,57,58,59,],[3,21,24,28,31,33,35,37,40,42,44,46,53,60,61,62,63,64,65,66,67,68,]),'string':([0,6,12,13,14,15,16,17,18,19,20,47,56,57,58,59,],[4,25,29,32,34,36,38,39,41,43,45,25,38,32,36,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','calc.py',96),
  ('statement -> NAME = string','statement',3,'p_statement_string','calc.py',102),
  ('statement -> NAME = statement','statement',3,'p_statement_assignCon','calc.py',108),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',114),
  ('statement -> string','statement',1,'p_statement_expr','calc.py',115),
  ('expression -> expression + expression','expression',3,'p_expression_binop','calc.py',120),
  ('expression -> expression - expression','expression',3,'p_expression_binop','calc.py',121),
  ('expression -> expression * expression','expression',3,'p_expression_binop','calc.py',122),
  ('expression -> expression / expression','expression',3,'p_expression_binop','calc.py',123),
  ('expression -> - expression','expression',2,'p_expression_uminus','calc.py',135),
  ('expression -> ( expression )','expression',3,'p_expression_group','calc.py',140),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',145),
  ('expression -> BINARY','expression',1,'p_expression_number','calc.py',146),
  ('expression -> OCT','expression',1,'p_expression_number','calc.py',147),
  ('expression -> HEX','expression',1,'p_expression_number','calc.py',148),
  ('string -> string + expression','string',3,'p_string_plus','calc.py',153),
  ('string -> string + string','string',3,'p_string_plus','calc.py',154),
  ('string -> expression + string','string',3,'p_string_plus','calc.py',155),
  ('string -> expression * string','string',3,'p_string_cheng1','calc.py',160),
  ('string -> string * expression','string',3,'p_string_cheng1','calc.py',161),
  ('string -> ( string )','string',3,'p_string_group','calc.py',169),
  ('string -> string - expression','string',3,'p_string_error','calc.py',174),
  ('string -> string - string','string',3,'p_string_error','calc.py',175),
  ('string -> expression - string','string',3,'p_string_error','calc.py',176),
  ('string -> string / string','string',3,'p_string_error','calc.py',177),
  ('string -> expression / string','string',3,'p_string_error','calc.py',178),
  ('string -> string / expression','string',3,'p_string_error','calc.py',179),
  ('string -> string * string','string',3,'p_string_error','calc.py',180),
  ('string -> STRING','string',1,'p_string_str','calc.py',186),
  ('string -> NAME','string',1,'p_string_name','calc.py',191),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',200),
]
